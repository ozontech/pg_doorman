name: Build packages.
on:
  push:
    tags:
      - "v*.*.*"

jobs:

  vendor:
    name: Release vendor.tar.gz.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Create vendor.tar.gz
        run: |
          make vendor.tar.gz && 
          make vendor-licenses.txt &&
          sha256sum vendor.tar.gz > vendor-sha256sum.txt
      - name: Release vendor.tar.gz
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          gh release upload ${{ github.ref_name }} ./vendor.tar.gz &&
          gh release upload ${{ github.ref_name }} ./vendor-sha256sum.txt &&
          gh release upload ${{ github.ref_name }} ./vendor-licenses.txt
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}

  deb:
    strategy:
      matrix:
        image: ["ubuntu:22.04", "ubuntu:24.04", "debian:12"]
    name: Build deb packages.
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install packages
        run: |
          apt-get update && apt-get install git cmake wget build-essential pkg-config libssl-dev clang g++ -y --option=Dpkg::Options::=--force-confdef &&
          wget -q https://static.rust-lang.org/dist/rust-1.84.1-x86_64-unknown-linux-gnu.tar.gz -O /tmp/rust.tar.gz &&
          cd /tmp && tar xf rust.tar.gz && ./rust-*-x86_64-unknown-linux-gnu/install.sh
      - name: Build binaries in release mode
        run: JEMALLOC_SYS_WITH_MALLOC_CONF="dirty_decay_ms:30000,muzzy_decay_ms:30000,background_thread:true,metadata_thp:auto" cargo build --release
      - name: Prepare output dir
        run: mkdir -p ./build_package/usr/bin && install ./target/release/pg_doorman ./build_package/usr/bin && mkdir -p ./out/
      - name: Check versions
        run: ./build_package/usr/bin/pg_doorman --version && cat /etc/debian_version
      - name: Fix package name
        run: |
          export PACKAGE_NAME=pg_doorman-${{ matrix.image }}.deb &&
          export PACKAGE_NAME=$(echo $PACKAGE_NAME | sed 's|:|-|g') &&
          echo PACKAGE_NAME=$PACKAGE_NAME >> $GITHUB_ENV
      - name: Package
        uses: bpicode/github-action-fpm@7502b06a5a58390398d4002bd284f8cb3caae6eb
        with:
          fpm_opts: "--chdir ./build_package/ --deb-no-default-config-files --depends openssl --name pg-doorman --version ${{ github.ref_name }} -t deb -s dir"
      - name: Prepare package
        run: mkdir -p ./package/ && mv *.deb ./package/${{ env.PACKAGE_NAME }} && ls -lah ./package/
      - name: Test package
        run: dpkg -c ./package/${{ env.PACKAGE_NAME }} && dpkg -i ./package/${{ env.PACKAGE_NAME }} && pg_doorman --version
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ./package/${{ env.PACKAGE_NAME }}

  rpm:
    strategy:
      matrix:
        image: ["rockylinux:9", "rockylinux:8", "almalinux:9"]
    name: Build rpm packages.
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install packages
        run: |
          yum install -y @"Development Tools" openssl-devel wget &&
          wget -q https://static.rust-lang.org/dist/rust-1.84.1-x86_64-unknown-linux-gnu.tar.gz -O /tmp/rust.tar.gz &&
          cd /tmp && tar xf rust.tar.gz && ./rust-*-x86_64-unknown-linux-gnu/install.sh
      - name: Build binaries in release mode
        run: JEMALLOC_SYS_WITH_MALLOC_CONF="dirty_decay_ms:30000,muzzy_decay_ms:30000,background_thread:true,metadata_thp:auto" cargo build --release
      - name: Prepare output dir
        run: mkdir -p ./build_package/usr/bin && install ./target/release/pg_doorman ./build_package/usr/bin && mkdir -p ./out/
      - name: Check versions
        run: ./build_package/usr/bin/pg_doorman --version && cat /etc/system-release
      - name: Fix package name
        run: |
          export PACKAGE_NAME=pg_doorman-${{ matrix.image }}.rpm &&
          export PACKAGE_NAME=$(echo $PACKAGE_NAME | sed 's|:|-|g') &&
          echo PACKAGE_NAME=$PACKAGE_NAME >> $GITHUB_ENV
      - name: Package
        uses: bpicode/github-action-fpm@7502b06a5a58390398d4002bd284f8cb3caae6eb
        with:
          fpm_opts: "--chdir ./build_package/ --depends openssl --name pg-doorman --version ${{ github.ref_name }} -t rpm -s dir"
      - name: Prepare package
        run: mkdir -p ./package/ && mv *.rpm ./package/${{ env.PACKAGE_NAME }} && ls -lah ./package/
      - name: Test package
        run: rpm -qlp ./package/${{ env.PACKAGE_NAME }} && rpm -i ./package/${{ env.PACKAGE_NAME }} && pg_doorman --version
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ./package/${{ env.PACKAGE_NAME }}

  release-packages:
    name: Release packages.
    needs: ['deb', 'rpm']
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - "pg_doorman-rockylinux-9.rpm"
          - "pg_doorman-rockylinux-8.rpm"
          - "pg_doorman-almalinux-9.rpm"
          - "pg_doorman-ubuntu-22.04.deb"
          - "pg_doorman-ubuntu-24.04.deb"
          - "pg_doorman-debian-12.deb"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.package }}"
          path: "./packages/"
      - name: Release package
        if: startsWith(github.ref, 'refs/tags/')
        run: gh release upload ${{ github.ref_name }} ./packages/${{ matrix.package }}
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}